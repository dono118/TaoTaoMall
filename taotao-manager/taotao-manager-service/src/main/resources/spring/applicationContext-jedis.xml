<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd  
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd  
    http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

	<!-- 连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="150" />
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="30" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="10" />
		<!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
		<property name="maxWaitMillis" value="3000" />
		<!-- 每次释放连接的最大数目 -->
		<property name="numTestsPerEvictionRun" value="100" />
		<!-- 释放连接的扫描间隔（毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<!-- 连接最小空闲时间 -->
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
		<property name="softMinEvictableIdleTimeMillis" value="10000" />
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="true" />
		<!-- 在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="true" />
		<!-- 在归还给pool时，是否提前进行validate操作 -->
		<property name="testOnReturn" value="true" />
		<!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
		<property name="blockWhenExhausted" value="false" />
	</bean>
    <!-- redis单机版 -->  
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool"> 
    	<constructor-arg name="poolConfig" ref="jedisPoolConfig" /> 
        <constructor-arg name="host" value="101.132.164.6"/>  
        <constructor-arg name="port" value="6379"/>
        <constructor-arg name="timeout" value="30000"/>
        <constructor-arg name="password" value="1234"/>  
    </bean>  
    <bean id="jedisClientSingle" class="com.taotao.jedis.service.impl.JedisClientSingle"></bean>
    
    <!-- redis集群版  
    <bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">  
        <constructor-arg>  
            <set>  
                <bean class="redis.clients.jedis.HostAndPort">  
                    <constructor-arg name="host" value="192.168.2.115"/>  
                    <constructor-arg name="port" value="6379"/>  
                </bean>  
                <bean class="redis.clients.jedis.HostAndPort">  
                    <constructor-arg name="host" value="192.168.2.116"/>  
                    <constructor-arg name="port" value="6379"/>  
                </bean>  
                <bean class="redis.clients.jedis.HostAndPort">  
                    <constructor-arg name="host" value="192.168.2.117"/>  
                    <constructor-arg name="port" value="6379"/>  
                </bean>  
                <bean class="redis.clients.jedis.HostAndPort">  
                    <constructor-arg name="host" value="192.168.2.118"/>  
                    <constructor-arg name="port" value="6379"/>  
                </bean>  
                <bean class="redis.clients.jedis.HostAndPort">  
                    <constructor-arg name="host" value="192.168.2.119"/>  
                    <constructor-arg name="port" value="6379"/>  
                </bean>  
                <bean class="redis.clients.jedis.HostAndPort">  
                    <constructor-arg name="host" value="192.168.2.120"/>  
                    <constructor-arg name="port" value="6379"/>  
                </bean>  
            </set>  
        </constructor-arg>  
    </bean>  
    <bean id="jedisClientCluster" class="com.taotao.jedis.service.impl.JedisClientCluster"></bean> -->
</beans>